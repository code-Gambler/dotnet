@model SDP2241A5.Models.ShowAddFormViewModel

@{
    ViewBag.Title = "AddShow";
}

<h2>Add Show for @Model.ActorsName</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    <div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ActorId)
        @Html.HiddenFor(model => model.GenreId)
        <div class="row mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="row mb-3">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="row mb-3">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12 mb-3">
            <div class="row">
                <div class="col-md-2 text-end">
                    <b>@Html.LabelFor(model => model.GenresList, htmlAttributes: new { @class = "control-label" })</b>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("Genre", Model.GenresList, htmlAttributes: new { @class = "form-control  form-select" })
                    @Html.ValidationMessageFor(model => model.GenresList, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12 mb-3">
            <div class="row">
                <div class="col-md-2 text-end">
                    <b>Actors</b>
                </div>


                    <div class="col-md-10">
                        <div class="bg-body-secondary p-4 rounded">
                            @foreach (var actor in Model.ActorsList)
                            {

                                <input class="form-check-input" type="checkbox" name="Id" checked="@actor.Selected" value="@actor.Value" />
                                @actor.Text

                                <br />
                            }
                        </div>
                    </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

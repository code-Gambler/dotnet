@model SDP2241A3.Models.TrackAddFormViewModel

@{
    ViewBag.Title = "Add new Track";
}

<h2>Add new Track</h2>
<p>Complete the form, and click the Create button</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.Composer, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Composer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Composer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.Milliseconds, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Milliseconds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Milliseconds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.AlbumList, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @Html.DropDownList("AlbumId", Model.AlbumList, htmlAttributes: new { @class = "form-control", @size = 10 })
                <!-- Can convert this to a single-select listbox by adding a "size" HTML attribute: -->
                @Html.ValidationMessageFor(model => model.AlbumList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row mb-3">
            @Html.LabelFor(model => model.MediaTypeList, htmlAttributes: new { @class = "col-form-label col-sm-2" })
            <div class="col-sm-10">
                @foreach (var item in Model.MediaTypeList)
                {
                    <div class="radio-inline">

                        <input class="form-check-input" type="radio" id=@item.Value name="MediatypeId" value="@item.Value" checked="@item.Selected" />
                        <label class="form-check-label" for=@item.Value>@item.Text</label>


                    </div>
                }
                @Html.ValidationMessageFor(model => model.MediaTypeList, "",
                         new { @class = "text-danger" })
            </div>
        </div>
        <div class="row mb-3">
            <div class="col">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
